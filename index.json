{
  "api/NF.UnityLibs.Managers.PatchManagement.Common.CRC32.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.CRC32.html",
    "title": "Class CRC32 | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class CRC32 Namespace NF.UnityLibs.Managers.PatchManagement.Common public static class CRC32 Inheritance object CRC32 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ComputeFromFpathAsync(string, CancellationToken) public static Task<uint> ComputeFromFpathAsync(string fpath, CancellationToken cancellationToken = default) Parameters fpath string cancellationToken CancellationToken Returns Task<uint> ComputeFromSpan(ReadOnlySpan<byte>) public static uint ComputeFromSpan(ReadOnlySpan<byte> data) Parameters data ReadOnlySpan<byte> Returns uint ComputeFromStr(string) public static uint ComputeFromStr(string str) Parameters str string Returns uint ComputeFromStreamAsync(Stream, CancellationToken) public static Task<uint> ComputeFromStreamAsync(Stream stream, CancellationToken cancellationToken) Parameters stream Stream cancellationToken CancellationToken Returns Task<uint>"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchDataGenerator.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchDataGenerator.html",
    "title": "Class PatchDataGenerator | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchDataGenerator Namespace NF.UnityLibs.Managers.PatchManagement.Common public static class PatchDataGenerator Inheritance object PatchDataGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateDummyPatchVersionJson(string) public static string CreateDummyPatchVersionJson(string destDir) Parameters destDir string Returns string CreatePatchFileListJson(int, string, HashSet<string>?) public static string? CreatePatchFileListJson(int patchNumber, string patchSrcDir, HashSet<string>? filterOrNull = null) Parameters patchNumber int patchSrcDir string filterOrNull HashSet<string> Returns string"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileList.PatchFileInfo.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileList.PatchFileInfo.html",
    "title": "Class PatchFileList.PatchFileInfo | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchFileList.PatchFileInfo Namespace NF.UnityLibs.Managers.PatchManagement.Common public sealed class PatchFileList.PatchFileInfo Inheritance object PatchFileList.PatchFileInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Constructors PatchFileInfo(string, long, uint) public PatchFileInfo(string name, long bytes, uint checksum) Parameters name string bytes long checksum uint Properties Bytes public long Bytes { get; } Property Value long Checksum public uint Checksum { get; } Property Value uint Name public string Name { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileList.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileList.html",
    "title": "Class PatchFileList | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchFileList Namespace NF.UnityLibs.Managers.PatchManagement.Common public sealed class PatchFileList Inheritance object PatchFileList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Constructors PatchFileList(int, Dictionary<string, PatchFileInfo>, long) public PatchFileList(int version, Dictionary<string, PatchFileList.PatchFileInfo> dic, long totalBytes) Parameters version int dic Dictionary<string, PatchFileList.PatchFileInfo> totalBytes long PatchFileList(int, int) public PatchFileList(int version, int count) Parameters version int count int Properties Dic public Dictionary<string, PatchFileList.PatchFileInfo> Dic { get; } Property Value Dictionary<string, PatchFileList.PatchFileInfo> TotalBytes public long TotalBytes { get; } Property Value long Version public int Version { get; } Property Value int Methods Clone() public PatchFileList Clone() Returns PatchFileList ToJson() public string ToJson() Returns string ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. UpdateTotalBytes() public long UpdateTotalBytes() Returns long"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileListDifference.PatchStatus.E_STATE.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileListDifference.PatchStatus.E_STATE.html",
    "title": "Enum PatchFileListDifference.PatchStatus.E_STATE | nf.unitylibs.managers.patchmanagement",
    "keywords": "Enum PatchFileListDifference.PatchStatus.E_STATE Namespace NF.UnityLibs.Managers.PatchManagement.Common public enum PatchFileListDifference.PatchStatus.E_STATE Fields DELETE = 2 SKIP = 0 UPDATE = 1"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileListDifference.PatchStatus.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileListDifference.PatchStatus.html",
    "title": "Class PatchFileListDifference.PatchStatus | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchFileListDifference.PatchStatus Namespace NF.UnityLibs.Managers.PatchManagement.Common public sealed class PatchFileListDifference.PatchStatus Inheritance object PatchFileListDifference.PatchStatus Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PatchStatus(PatchFileInfo, E_STATE, long) public PatchStatus(PatchFileList.PatchFileInfo patchFileInfo, PatchFileListDifference.PatchStatus.E_STATE state, long occupiedByte = 0) Parameters patchFileInfo PatchFileList.PatchFileInfo state PatchFileListDifference.PatchStatus.E_STATE occupiedByte long Properties OccupiedByte public long OccupiedByte { get; } Property Value long PatchFileInfo public PatchFileList.PatchFileInfo PatchFileInfo { get; } Property Value PatchFileList.PatchFileInfo State public PatchFileListDifference.PatchStatus.E_STATE State { get; } Property Value PatchFileListDifference.PatchStatus.E_STATE"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileListDifference.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchFileListDifference.html",
    "title": "Class PatchFileListDifference | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchFileListDifference Namespace NF.UnityLibs.Managers.PatchManagement.Common public sealed class PatchFileListDifference Inheritance object PatchFileListDifference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods DifferenceSetOrNull(PatchFileList?, PatchFileList, string, CancellationToken) public static Task<List<PatchFileListDifference.PatchStatus>?> DifferenceSetOrNull(PatchFileList? currPatchFileListOrNull, PatchFileList nextPatchFileList, string patchFileDir, CancellationToken cancellationToken = default) Parameters currPatchFileListOrNull PatchFileList nextPatchFileList PatchFileList patchFileDir string cancellationToken CancellationToken Returns Task<List<PatchFileListDifference.PatchStatus>>"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchVersion.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.PatchVersion.html",
    "title": "Class PatchVersion | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchVersion Namespace NF.UnityLibs.Managers.PatchManagement.Common public sealed class PatchVersion : Dictionary<string, int>, IDictionary<string, int>, ICollection<KeyValuePair<string, int>>, IReadOnlyDictionary<string, int>, IReadOnlyCollection<KeyValuePair<string, int>>, IEnumerable<KeyValuePair<string, int>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Inheritance object Dictionary<string, int> PatchVersion Implements IDictionary<string, int> ICollection<KeyValuePair<string, int>> IReadOnlyDictionary<string, int> IReadOnlyCollection<KeyValuePair<string, int>> IEnumerable<KeyValuePair<string, int>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<string, int>.Add(string, int) Dictionary<string, int>.Clear() Dictionary<string, int>.ContainsKey(string) Dictionary<string, int>.ContainsValue(int) Dictionary<string, int>.EnsureCapacity(int) Dictionary<string, int>.GetEnumerator() Dictionary<string, int>.OnDeserialization(object) Dictionary<string, int>.Remove(string) Dictionary<string, int>.Remove(string, out int) Dictionary<string, int>.TrimExcess() Dictionary<string, int>.TrimExcess(int) Dictionary<string, int>.TryAdd(string, int) Dictionary<string, int>.TryGetValue(string, out int) Dictionary<string, int>.Comparer Dictionary<string, int>.Count Dictionary<string, int>.this[string] Dictionary<string, int>.Keys Dictionary<string, int>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods ToJson() public string ToJson() Returns string"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.Common.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.Common.html",
    "title": "Namespace NF.UnityLibs.Managers.PatchManagement.Common | nf.unitylibs.managers.patchmanagement",
    "keywords": "Namespace NF.UnityLibs.Managers.PatchManagement.Common Classes CRC32 PatchDataGenerator PatchFileList PatchFileList.PatchFileInfo PatchFileListDifference PatchFileListDifference.PatchStatus PatchVersion Enums PatchFileListDifference.PatchStatus.E_STATE"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.E_EXCEPTION_KIND.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.E_EXCEPTION_KIND.html",
    "title": "Enum E_EXCEPTION_KIND | nf.unitylibs.managers.patchmanagement",
    "keywords": "Enum E_EXCEPTION_KIND Namespace NF.UnityLibs.Managers.PatchManagement public enum E_EXCEPTION_KIND Fields ERR_APPLICATION_IS_NOT_PLAYING = 3 ERR_FAIL_OPTION_VALIDATE = 8 ERR_FAIL_TO_GET_PATCHBUILDVERSION = 9 ERR_FAIL_TO_VALIDATE_PATCHFILES = 10 ERR_LACK_OF_STORAGE = 7 ERR_NETWORK_IS_NOT_REACHABLE = 4 ERR_SYSTEM_EXCEPTION = 6 ERR_TASK_IS_CANCELED = 5 ERR_WEBREQUEST_FAIL = 1 ERR_WEBREQUEST_TXT_IS_EMPTY = 2 NONE = 0"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.E_PATCH_STATE.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.E_PATCH_STATE.html",
    "title": "Enum E_PATCH_STATE | nf.unitylibs.managers.patchmanagement",
    "keywords": "Enum E_PATCH_STATE Namespace NF.UnityLibs.Managers.PatchManagement public enum E_PATCH_STATE Fields NONE = 0 PATCHFILELIST_CURR = 300 PATCHFILELIST_DIFF_COLLECT_END = 600 PATCHFILELIST_DIFF_COLLECT_START = 500 PATCHFILELIST_FINALIZE = 800 PATCHFILELIST_NEXT = 400 PATCHFILELIST_VALIDATE = 700 RECIEVE_PATCHBUILDVERSION_END = 200 RECIEVE_PATCHBUILDVERSION_START = 100"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.EditorTests.NewTestScript.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.EditorTests.NewTestScript.html",
    "title": "Class NewTestScript | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class NewTestScript Namespace NF.UnityLibs.Managers.PatchManagement.EditorTests public sealed class NewTestScript Inheritance object NewTestScript Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods TestCrc32WithKnownValues(string, uint) public void TestCrc32WithKnownValues(string input, uint expectedCrc) Parameters input string expectedCrc uint TestCrc32WithModifiedData(string, string) public void TestCrc32WithModifiedData(string a, string b) Parameters a string b string"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.EditorTests.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.EditorTests.html",
    "title": "Namespace NF.UnityLibs.Managers.PatchManagement.EditorTests | nf.unitylibs.managers.patchmanagement",
    "keywords": "Namespace NF.UnityLibs.Managers.PatchManagement.EditorTests Classes NewTestScript"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.IPatchManagerEventReceiver.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.IPatchManagerEventReceiver.html",
    "title": "Interface IPatchManagerEventReceiver | nf.unitylibs.managers.patchmanagement",
    "keywords": "Interface IPatchManagerEventReceiver Namespace NF.UnityLibs.Managers.PatchManagement public interface IPatchManagerEventReceiver Methods OnIsEnoughStorageSpace(long) Task<bool> OnIsEnoughStorageSpace(long needFreeStorageBytes) Parameters needFreeStorageBytes long Returns Task<bool> OnProgressFileInfo(ProgressFileInfo) void OnProgressFileInfo(ProgressFileInfo info) Parameters info ProgressFileInfo OnProgressTotal(float, long) void OnProgressTotal(float progressTotal, long bytesDownloadedPerSecond) Parameters progressTotal float bytesDownloadedPerSecond long OnStateChanged(E_PATCH_STATE, string) void OnStateChanged(E_PATCH_STATE state, string debugMessage = \"\") Parameters state E_PATCH_STATE debugMessage string"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.PatchManager.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.PatchManager.html",
    "title": "Class PatchManager | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchManager Namespace NF.UnityLibs.Managers.PatchManagement [Serializable] public sealed class PatchManager : IDisposable Inheritance object PatchManager Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties DevicePersistentPrefix public string DevicePersistentPrefix { get; } Property Value string RemoteURL_Base public string RemoteURL_Base { get; } Property Value string RemoteURL_SubPath public string RemoteURL_SubPath { get; } Property Value string Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~PatchManager() protected ~PatchManager() FromAppVersion(string) public Task<Exception?> FromAppVersion(string appVersion) Parameters appVersion string Returns Task<Exception> FromCurrentAppVersion() public Task<Exception?> FromCurrentAppVersion() Returns Task<Exception> FromPatchBuildVersion(int) public Task<Exception?> FromPatchBuildVersion(int patchBuildVersion) Parameters patchBuildVersion int Returns Task<Exception>"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.PatchManagerBuilder.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.PatchManagerBuilder.html",
    "title": "Class PatchManagerBuilder | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchManagerBuilder Namespace NF.UnityLibs.Managers.PatchManagement public sealed class PatchManagerBuilder Inheritance object PatchManagerBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods Build() public (PatchManager? patchManagerOrNull, Exception? builderExOrNull) Build() Returns (PatchManager patchManagerOrNull, Exception builderExOrNull) EventRecieveWith(IPatchManagerEventReceiver) public PatchManagerBuilder EventRecieveWith(IPatchManagerEventReceiver receiver) Parameters receiver IPatchManagerEventReceiver Returns PatchManagerBuilder FromRemote(string, string) public static PatchManagerBuilder FromRemote(string url, string bucketPrefix) Parameters url string bucketPrefix string Returns PatchManagerBuilder ToPersistantPrefix(string) public PatchManagerBuilder ToPersistantPrefix(string path) Parameters path string Returns PatchManagerBuilder WithConcurrentWebRequestMax(int) public PatchManagerBuilder WithConcurrentWebRequestMax(int maxRequests) Parameters maxRequests int Returns PatchManagerBuilder"
  },
  "api/NF.UnityLibs.Managers.PatchManagement.PatchManagerException.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.PatchManagerException.html",
    "title": "Class PatchManagerException | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class PatchManagerException Namespace NF.UnityLibs.Managers.PatchManagement public sealed class PatchManagerException : Exception, ISerializable Inheritance object Exception PatchManagerException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.TargetSite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.ReferenceEquals(object, object) Constructors PatchManagerException(E_EXCEPTION_KIND, string) public PatchManagerException(E_EXCEPTION_KIND kind, string msg) Parameters kind E_EXCEPTION_KIND msg string Properties ExceptionKind public E_EXCEPTION_KIND ExceptionKind { get; } Property Value E_EXCEPTION_KIND StackTrace Gets a string representation of the immediate frames on the call stack. public override string StackTrace { get; } Property Value string A string that describes the immediate frames of the call stack."
  },
  "api/NF.UnityLibs.Managers.PatchManagement.ProgressFileInfo.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.ProgressFileInfo.html",
    "title": "Class ProgressFileInfo | nf.unitylibs.managers.patchmanagement",
    "keywords": "Class ProgressFileInfo Namespace NF.UnityLibs.Managers.PatchManagement public sealed class ProgressFileInfo Inheritance object ProgressFileInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Properties BytesDownloaded public long BytesDownloaded { get; set; } Property Value long ConcurrentIndex public int ConcurrentIndex { get; set; } Property Value int ItemCurrIndex public int ItemCurrIndex { get; set; } Property Value int ItemMaxLength public int ItemMaxLength { get; set; } Property Value int PatchFileInfo public PatchFileList.PatchFileInfo PatchFileInfo { get; set; } Property Value PatchFileList.PatchFileInfo ProgressInFileDownload public float ProgressInFileDownload { get; set; } Property Value float Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NF.UnityLibs.Managers.PatchManagement.html": {
    "href": "api/NF.UnityLibs.Managers.PatchManagement.html",
    "title": "Namespace NF.UnityLibs.Managers.PatchManagement | nf.unitylibs.managers.patchmanagement",
    "keywords": "Namespace NF.UnityLibs.Managers.PatchManagement Classes PatchManager PatchManagerBuilder PatchManagerException ProgressFileInfo Interfaces IPatchManagerEventReceiver Enums E_EXCEPTION_KIND E_PATCH_STATE"
  },
  "docs/index.html": {
    "href": "docs/index.html",
    "title": "Introduction | nf.unitylibs.managers.patchmanagement",
    "keywords": "Introduction repo upm https://docs.unity3d.com/Manual/upm-ui-giturl.html https://github.com/netpyoung/nf.unitylibs.managers.patchmanagement.git?path=LocalPackage example (PatchManager? patchManagerOrNull, Exception? builderExOrNull) = PatchManagerBuilder .FromRemote(\"http://127.0.0.1:9000\", \"bucket-a/prefix-a\") .ToPersistantPrefix(\"A\") .WithConcurrentWebRequestMax(5) .EventRecieveWith(this) .Build(); if (builderExOrNull is Exception ex) { Debug.LogException(ex); return; } using (PatchManager patchManager = patchManagerOrNull!) { Exception? exOrNull = await patchManager.FromCurrentAppVersion(); if (exOrNull != null) { Debug.LogException(exOrNull, this); return; } Debug.Log(\"!!!!!!!!!!!!\"); }"
  },
  "index.html": {
    "href": "index.html",
    "title": "",
    "keywords": ""
  }
}